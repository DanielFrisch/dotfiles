#!/usr/bin/ruby

# Usage: dotf homebrew
# Summary: Installs homebrew and some brew packages by default
# Help: This will install homebrew and the packages defined in the
# file config/brew

# install brew if it does not exists
doUpgrade = (ARGV.include?('--upgrade') || ARGV.include?('-u'))

app_name = "Homebrew"
app_cmd = "brew"
app_install_cmd = 'ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"'
check_app_installation = 'type $app_cmd &>/dev/null'.empty?

puts "---------------------------------------------------------------------------------"
puts "This script installs #{app_name} if it is not installed"
puts "---------------------------------------------------------------------------------"

unless %x(command #{app_cmd} 2> /dev/null)
  # brew not found, ask user if we should install it
  puts "#{app_name} was not found in the system, To install it, this command needs be executed:"
  puts app_install_cmd

  puts "Do you want me to install it? (y/n)"

  if gets.chomp =~ /^[Yy]/
    puts "Ok, installing #{app_name}"
    system app_install_cmd
  else
    puts "Aborting"
    exit 2
  end

else
  puts "#{app_name} is already installed: version #{%x(#{app_cmd} --version)}"

end

# Installing Applications with Brew Cask NOTE ---> this does create symlinks

puts "Installing Cloud Storage Apps"
system('brew cask install dropbox')
#system('brew cask install copy')
system('brew cask install google-drive')

puts "Installing Browsers"
system('brew cask install google-chrome')
#system('brew cask install google-hangouts')
system('brew cask install firefox')
system('brew cask install opera')

puts "Installing Productivty Apps"
system('brew cask install alfred')
system('brew cask link alfred')
system('brew cask install typinator')
system('brew cask install onepassword')
system('brew cask install dash')
system('brew cask install fantastical')
system('brew cask install todoist')
system('brew cask install divvy')
system('brew cask install cloudytabs')
system('brew cask install adobe-creative-cloud')
system('brew cask install slack')
system('brew cask install macaw')

puts "Installing Utilities"
#system('brew cask install keka') # using the OS X defautl again
#system('brew cask install carbon-copy-cloner')
system('brew cask install cleanmymac')
system('brew cask install macpaw-gemini')
system('brew cask install colorpicker-hex')
system('brew cask install colorpicker-antetype')
system('brew cask install colorpicker-skalacolor')
system('brew cask install sitesucker')
system('brew cask install namechanger')
system('brew cask install bartender')
system('brew cask install imageoptim')
system('brew cask install joinme')
system('brew cask install karabiner')
system('brew cask install seil')
system('brew cask install recordit')

puts "Installing Video Utilities and Spotify"
system('brew cask install spotify')
system('brew cask install vlc')
system('brew cask install handbrake')
system('brew cask install handbrakebatch')

puts "Installing Development Tools"
system('brew cask install iterm2')
system('brew cask install sublime-text')
system('brew cask install transmit')
system('brew cask install coda')
system('brew cask install codekit')
system('brew cask install github')
system('brew cask install mou')
system('brew cask install sequel-pro')
system('brew cask install kaleidoscope')
system('brew cask install mindnode-pro')
system('brew cask install mamp')

puts "Checking with the DR"
system('brew doctor')

puts "Removing outdated versions from the cellar"
system('brew cleanup')

if (doUpgrade)
    puts "Upgrading already-installed formulae"
    system('brew upgrade')
end

puts "Installing node"
system('brew install node')

puts "Done"
puts "Donâ€™t forget to add $(brew --prefix coreutils)/libexec/gnubin to \$PATH."
