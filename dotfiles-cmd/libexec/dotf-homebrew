#!/usr/bin/ruby

# Usage: dotf homebrew
# Summary: Installs homebrew and some brew packages by default
# Help: This will install homebrew and the packages defined in the
# file config/brew

# install brew if it does not exists
doUpgrade = (ARGV.include?('--upgrade') || ARGV.include?('-u'))

app_name = "Homebrew"
app_cmd = "brew"
app_install_cmd = 'ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
'
check_app_installation = 'type $app_cmd &>/dev/null'.empty?

puts "---------------------------------------------------------------------------------"
puts "This script installs #{app_name} if it is not installed"
puts "---------------------------------------------------------------------------------"

unless %x(command #{app_cmd} 2> /dev/null)
  # brew not found, ask user if we should install it
  puts "#{app_name} was not found in the system, To install it, this command needs be executed:"
  puts app_install_cmd

  puts "Do you want me to install it? (y/n)"

  if gets.chomp =~ /^[Yy]/
    puts "Ok, installing #{app_name}"
    system app_install_cmd
  else
    puts "Aborting"
    exit 2
  end

else
  puts "#{app_name} is already installed: version #{%x(#{app_cmd} --version)}"

end

puts "Updating Homebrew to the latest version"
system('brew update')

puts "Installing GNU core utilities (those that come with OS X are outdated)"
system('brew install coreutils')

puts "Installing GNU 'find', 'locate', 'updatedb', and 'xargs', g-prefixed"
system('brew install findutils')

puts "Installing Bash 4 (osx ships with an outdated version)"
system('brew install bash')
system('install bash-completion')

puts "Installing wget"
system('brew install wget --enable-iri')

puts "Install fasd and autojump"
system('brew install fasd')
system('brew install autojump')

puts "Installing more recent versions of some OS X tools"
system('brew tap homebrew/dupes')
system('brew install homebrew/dupes/grep')
system('brew install homebrew/dupes/screen')


puts "Installing more recent versions of PHP and Composer"
system('brew tap josegonzalez/php')
system('brew install php56 --with-gmp')
system('brew install josegonzalez/php/composer')
system('brew install phpmyadmin')
system('brew install dnsmasq')

puts "Installing git"
puts "Installing git-flow-avh"
puts "Install tig"
system('brew install git')
system('brew install git-flow-avh')
system('brew install tig')
system('brew install fontconfig')

puts "Installing some CTF tools & exiv2"
system('brew install imagemagick --with-webp')
system('brew install nmap')
system('brew install pngcheck')
system('brew install sqlmap')
system('brew install rename')
system('brew install tree')
system('brew install webkit2png')

puts "Install ssh-copy-id & tmux"
system('brew install ssh-copy-id')
system('brew install tmux')

puts "Installing unzip p7zip"
system('brew install unzip')
system('brew install p7zip')

puts "Install vim and MacVim"
system('brew install vim --override-system-vi')
system('brew install macvim')

puts "Installing tidy"
system('brew install tidy')

puts "Installing ack"
system('brew install ack')

puts "Install brew-casks"
system('brew install caskroom/cask/brew-cask')

puts "Install Legit"
system('brew install legit')

puts "Activate Legit"
system('legit install')

puts "Installing node with npm"
system('brew install node')

puts "Removing outdated versions from the cellar"
system('brew cleanup')

if (doUpgrade)
    puts "Upgrading already-installed formulae"
    system('brew upgrade')
end

puts "Done"
puts "Donâ€™t forget to add $(brew --prefix coreutils)/libexec/gnubin to \$PATH."
