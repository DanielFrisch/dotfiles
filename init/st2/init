#!/bin/bash

################################################
# CONSTANTS
CURRENTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
st2_user_packages_folder_path="$CURRENTDIR/st2/User"

st2_base_path="$HOME/Library/Application Support/Sublime Text 2"
st2_packages_path="$st2_base_path/Packages"
st2_installed_packages_path="$st2_base_path/Installed Packages"
user_packages_path="$st2_packages_path/User"

package_control_path="$st2_installed_packages_path/Package Control.sublime-package"
package_control_url="https://sublime.wbond.net/Package%20Control.sublime-package"

################################################
#Â FUNCTIONS

function checkSublimeText2IsInstalled() {
  if [[ ! -d "/Applications/Sublime Text 2.app/" ]] ; then
    echo "Please, install Sublime Text 2 manually in the Applications folder"
    exit 0
  fi
}

function symlinkUserPackages() {
  echo "Symlinking the dotfiles User packages folder to the Subline folder"
  ln -nfs "$st2_user_packages_folder_path" "$user_packages_path"
}

function checkSymlinkUserPackages() {
  echo "Symlinking user packages..."
  
  # Check if folder is already a symlink

  if [[ -d "$user_packages_path" ]] ; then
      echo "User packages folder already exist, making a backup..."
      # Directory command goes here.
      mv "$user_packages_path" "$user_packages_path.bak"
      echo "Made a backup of the User packages in $user_packages_path.bak"
  elif [[ -L "$user_packages_path" ]] ; then
      echo "User packages folder is already a symlink, redoing"
      
      rm "$user_packages_path"
      symlinkUserPackages
  else 
    echo "User packages folder not found"
    symlinkUserPackages
  fi

  echo "Symlinking user packages finished!"
}

function installPackageControl() {
  if [[ ! -f "$package_control_path" ]] ; then
    echo "Installing Package Control for Sublime Text 2 ..."
    mkdir -p "$st2_installed_packages_path"
    curl "$package_control_url" -o "$package_control_path"
    echo "Package Control for Sublime Text 2 installed at $package_control_path"
  else
    echo "Package Control for Sublime Text 2 already installed"
  fi 
}

################################################
# MAIN
checkSublimeText2IsInstalled
echo "----------------------------------------------------------------"
echo "This scripts installs Sublime Text Package Control if needed and also \
symlinks the User settings folder in the dotfiles repo (located at $st2_user_packages_folder_path) in the \
 Subline Text 2 path ($user_packages_path)"
echo "This will allow to sync your Sublime Text 2 settings over multiple computers"
echo "----------------------------------------------------------------"
echo
echo "Before installing, ensure Sublime Text 2 is NOT running."

read -p "Ready to rock? (y/n) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
  installPackageControl
  checkSymlinkUserPackages
  echo "Sublime Text 2 Packages Control and user settings installed successfully"
  echo "Please, start Sublime Text 2, and wait for Package Control to install the new packages automatically"
else
  echo "Aborting..."
  exit 1
fi






